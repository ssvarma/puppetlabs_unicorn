# This is the configuration for running apps with unicorn.
# See original here: http://projects.puppetlabs.com/projects/1/wiki/Using_Unicorn

rails_env = ENV['RAILS_ENV'] || 'production'

worker_processes <%= unicorn_worker_processes %>
working_directory '<%= approot %>'
listen '<%= unicorn_socket %>', :backlog => <%= unicorn_backlog %>
timeout 300
pid "<%= unicorn_pidfile %>"
client_body_buffer_size 524288
<% if has_variable?( 'unicorn_log_stdout' ) and unicorn_log_stdout == true -%>
stderr_path '<%= unicorn_stdlog_path %>/stderr.log'
stdout_path '<%= unicorn_stdlog_path %>/stdout.log'
<% end -%>

preload_app false # We have turned this off, as we don't use REE.

# See http://unicorn.bogomips.org/SIGNALS.html for what this does.
before_fork do |server, worker|
  old_pid = "#{server.config[:pid]}.oldbin"
  if File.exists?(old_pid) && server.pid != old_pid
    begin
      Process.kill("QUIT", File.read(old_pid).to_i)
    rescue Errno::ENOENT, Errno::ESRCH
      # someone else did our job for us
    end
  end
end


<% if has_variable?( 'unicorn_user' ) and unicorn_user != '' and unicorn_user != 'root' and has_variable?( 'unicorn_group' ) and unicorn_group != '' and unicorn_group != 'root' -%>
# Stolen from https://github.com/blog/517-unicorn
after_fork do |server, worker|

  begin
    uid, gid = Process.euid, Process.egid
    user  = '<%= unicorn_user %>'
    group = '<%= unicorn_group %>'
    target_uid = Etc.getpwnam(user).uid
    target_gid = Etc.getgrnam(group).gid
    worker.tmp.chown(target_uid, target_gid)
    if uid != target_uid || gid != target_gid
      Process.initgroups(user, target_gid)
      Process::GID.change_privilege(target_gid)
      Process::UID.change_privilege(target_uid)
    end
  rescue => e
    if RAILS_ENV == 'development'
      STDERR.puts "couldn't change user, oh well"
    else
      raise e
    end
  end
end
<% end -%>
